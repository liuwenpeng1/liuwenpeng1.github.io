[{"categories":null,"content":"IDE Eval Reset 新版的Idea通过激活码和破解补丁jetbrains-agent已经无法破解，新的破解方式都是使用IDE Eval Reset插件来实现，这个插件是通过无限重置试用时间来实现的。插件需要自己查找下载。安装最新的IDEA之后，打开选择试用，将插件中的zip包直接拖入，插件会自动安装，完成之后重启，就完成破解，亲测好用。 Alibaba Java Guideline 该插件是由阿里p3c研发的，根据《阿里巴巴Java开发规约》而指定的一个代码静态扫描工具。他可以帮助你更好的进行编程。具体可以参考《阿里巴巴Java开发规约》 ，使用方法非常简单，安装插件之后，右键就有编码规约扫描 Grep Console 这是一款Console日志插件，服务日志如果非常多，非常繁杂，非常不利于进行调试，Grep Console可以进行很好的屏蔽和过滤，支持自定义配色，非常的方便 Arthas idea 基于IntelliJ IDEA开发的Alibaba Arthas 命令生成插件，支持Alibaba Arthas 官方常用的命令,该插件支持Alibaba Arthas 常用命令,比如 watch、trace、ognl static、ognl bean method、field、monitor、stack 、tt等命令。具体的Arthas的使用方法本篇不展开讲了 ","date":"2021-11-21","img":"","permalink":"/zh-cn/posts/idea-plugin/","series":null,"tags":null,"title":"推荐几个好用的Idea插件"},{"categories":null,"content":"前言 当文章写的越来越多，查找就会有些费劲，需要一个本地搜索的功能，今天就来添加博客的本地搜索\n安装插件hexo-generator-searchdb， 1$ npm install hexo-generator-search --save 编辑配置文件，添加以下内容： 1# Search2search:3path:search.xml4field:post5format:html6limit:10000编辑主题配置文件，启动搜索 1local_search:2enable:true重启刷新一下 1$ hexo s 新页面的搜索功能就添加完成了。\n","date":"2020-02-10","img":"","permalink":"/zh-cn/posts/hexo-search/","series":null,"tags":null,"title":"为博客添加本地搜索"},{"categories":null,"content":"创建tag页面和分类页面是类似的，如果没有添加直接点会出现cannot find的错误，下面我们来创建标签页\n创建tags页面  打开命令行输入一下指令：  1$ hexo new page \u0026#34;tags\u0026#34; 指令输完之后会在source下生成一个tags目录，该目录下会有一个index.md文件，编辑该文件,type: tags  1--- 2title: tags 3date: 2020-02-07 19:01:54 4type: tags 5--- 为自己的文章添加各自的标签 1--- 2title: Hello World 3tags: xxx 4--- 重启刷新一下 1$ hexo s 然后你就可以在标签页看到自己刚刚的标签了。\n如果首页的menu中没有tags选项，可以在nexT的_config.yml文件中找到menu，并添加。\n1menu:2home:/ || home3#about: /about/ || user4categories:/categories/ || th5tags:/tags/ || tags6search:/search/ || search7archives:/archives/ || archive","date":"2020-02-10","img":"","permalink":"/zh-cn/posts/hexo-tags/","series":null,"tags":null,"title":"为博客添加标签"},{"categories":null,"content":"前言 idea是开发java很好用的IDE，过去使用时候都是百度随便一个破解码就能完成破解，但最近老是因为破解过期而失败，令人心情烦躁。于是去网上找了一下破解办法彻底解决一下。\n下载与安装 我们选择从官网下载，下载地址为: https://www.jetbrains.com/idea/download/ 目前最新版本是2019.3，我这里用的是2019.2。 选择正确的平台和版本进行下载。 如果想找历史版本可以点击other version找到历史版本 等待下载之后，点击进行安装 安装之后再启动界面，先选择使用30天选项\n下载破解补丁 破解补丁是一个jetbrains-agent.jar的一个补丁大约1M左右。下载之后将破解文件放到某个路径下，这里建议是idea的安装目录下，注意不可在中文路径中，否则idea打不开\n mac: /User/xxx/jetbrains-agent.jar win: C:\\Program Files\\JetBrains\\bin\n 配置补丁 打开idea在helper-edit Custom VM Options菜单。如果需要创建文件，点yes 在文件的末尾加上刚刚存放的补丁路径：（注意，请一定在idea中修改此配置，直接从目录中修改文件将会破解失败） 此时，保存配置，重启idea！\n在idea菜单helper-register中选择License server激活 此时idea应该已经激活成功，在关于idea中可以查看到，如果还是试用版，可以重启一下，应该就可以成功\n结语 以上方法在2019.2版本上面验证是通过的，此外也可用与破解JetBrains公司的其他IDE，比如WebStorm。\n","date":"2020-02-08","img":"","permalink":"/zh-cn/posts/java-idea/","series":null,"tags":null,"title":"Idea的安装与破解"},{"categories":null,"content":"刚刚创建完的博客是没有category分类的，如果没有创建就之间点分类，会出现 “Cannot GET /categories/”的错误，下面我们来创建分类页面。\n创建categories页面  打开命令行输入一下指令：  1$ hexo new page \u0026#34;categories\u0026#34; 指令输完之后会在source下生成一个categories目录，该目录下会有一个index.md文件，编辑该文件,type: categories  1--- 2title: categories 3date: 2020-02-07 19:01:54 4type: categories 5--- 为自己的文章添加各自的分类 1--- 2title: Hello World 3categories: xxx 4--- 重启刷新一下 1$ hexo s 然后你就可以在分类页看到自己刚刚的分类了。\n","date":"2020-02-07","img":"","permalink":"/zh-cn/posts/hexo-categories/","series":null,"tags":null,"title":"为博客添加分类"},{"categories":null,"content":"next的默认主题首页是显示文章的全部，这样在查看时候很不方便，可以把首页设置为只显示标题和简要。\n方法  进入hexo博客项目的themes/next目录 用文本编辑器打开_config.yml文件 搜索 auto_excerpt,将enable 改为true，默认为false  1auto_excerpt:2enable:true3length:100拓展 auto_excerpt的lenth属性是用来调整概览的长度的，可以根据自己情况调整。 ","date":"2020-02-06","img":"","permalink":"/zh-cn/posts/theme-next-home/","series":null,"tags":null,"title":"博客主页只显示标题部分"},{"categories":null,"content":"当你部署完成Hexo博客之后，博客的默认主题是landspace，而事实上hexo支持各种各样的主题 。我们选择next主题作为我们博客的主题。本文参照的是NexT官方文档 。\n安装NexT Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。具体到 NexT 来说，安装步骤如下: 1 下载NexT主题：\n1$ cd your-blog-dir 2$ git clone https://github.com/iissnan/hexo-theme-next themes/next 2 启用NexT作为主题： 下载完成之后，打开你hexo目录下面的_config.yml文件，找到theme节点，将其改为next。 3 验证主题生效：\n1$ hexo s 在浏览器里输入localhost:4000,检查主题是否生效。 现在，你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。\n主题设定 设置 Scheme  Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：\n  Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新   Scheme 的切换通过更改theme/next目录下的_config.yml文件，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。\n 设置 Menu  菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。 通过更改theme/next目录下的_config.yml文件，搜索 menu 关键字。你可以设置menu的相关属性，是否显示图标，是否显示某一菜单项等等。\n 设置 侧栏 默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改theme/next目录下的_config.yml文件 中的 sidebar 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。 1 设置侧栏位置 修改sidebar的position值来修改侧栏显示的位置，支持 left 和 right 两个选项 2 设置侧栏时机 修改sidebar的display的值来修改侧栏显示的时机，支持 post ，always ，hide ，remove\n post - 默认行为，在文章页面（拥有目录列表）时显示 always - 在所有页面中都显示 hide - 在所有页面中都隐藏（可以手动展开） remove - 完全移除  后语 next的基本设置基本就这么多，还有其他更多的配置，以后再补齐。\n","date":"2018-02-21","img":"","permalink":"/zh-cn/posts/theme-next-start/","series":null,"tags":null,"title":"使用next来做为博客主题"},{"categories":null,"content":" 2019.02.19。就在今天，Lazy羊的个人博客开通了 作为一个程序员，有一个自己的个人博客，其实非常有必要。然而当我意识到这一点的时候已经有点晚了，不知不觉我已经是一个从事编程工作5年的老鸟了，到现在为止做的技术其实不算少，然而都是做到哪里用哪里，用到哪里查哪里，做完哪里忘哪里。所以到今天为止觉得自己会的东西很多，但是有觉得自己会的东西很少。后悔当初没有刚入行的时候做博客。 古语有云朝闻夕死，从今天起会陆续更新博客，会先从工作相关的开始，从熟悉的开始补起，由于对markdown的使用还不是很熟悉，加上时间不固定，所以更新频率可能会很低。 总之，以后加油~\n","date":"2018-02-19","img":"","permalink":"/zh-cn/posts/firstblog/","series":null,"tags":null,"title":"开博纪念"},{"categories":null,"content":"写在前面 要做个人博客，有很多在线博客站可以选择。如博客园，CSDN，简书都非常不错，我也经常看这些站的博客，然而对于一个技术人员来说，博客原始文件数据最好是自己管理，这样不会受各种在线博客站的限制，因此选择Hexo+Github pages是一个非常不错的选择\nHexo  Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown （或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。Hexo官方文档中文版  环境配置  Git  nodejs，npm   将git和node环境装好之后，打开终端terminal，分别输入下列指令,如果可以得到下图所示说明环境已经装好：\n1$ git --version 1$ npm -v 1$ node -v 安装Hexo 1 创建一个博客目录（如/User/Documents/Blog),在该目录下面输入npm install hexo -g，开始安装Hexo\n1$ npm install hexo -g 2 输入hexo -v检查是否安装成功\n1$ hexo -v 配置Hexo 1 如果安装完成Hexo，看到上图说明hexo安装成功。输入hexo init 进行Hexo初始化\n1$ hexo init 2 输入npm install 安装相关的组件，等待安装完成\n1$ npm install 3 输入hexo g,生成相关文件\n1$ hexo g 4 输入hexo s，启动本地渲染(如果启动失败，请检查本地4000端口是否被占用)\n1$ hexo s 5 打开浏览器，输入localhost:4000，你将看到： 到此为止，Hexo已经全部安装配置完成\n创建GitHub pages 页面 注册登录自己的GitHub账号（此处不再赘述），创建一个repository，注意repository的名字为yourname.github.io。yourname必须是你github账户的名字，如果不一样可能会遇到各种问题。 创建完成之后，点击repository的setting页面,在github pages栏有一个url。这个url就是你发布博客之后的url，如果你配置的没有问题的话，10分钟之后这个页面就可以访问了\n将Hexo与GitHub pages页面关联起来 在本地博客目录下面找到_config.yml的文件(关于config文件的详细配置，将会另外讲解，此处不再赘述)，在文件末尾找到deploy项，修改其repo的属性 修改完之后保存，在终端输入hexo d 发布\n1$ hexo d 然后在你的GitHub page页面就可以看到这个页面了。到此配置就全部完成了。\n后语 当然你也可以选择将博客绑定在个人域名下面，这样看起来更加酷炫。回头我也会更新绑定个人域名的部分。\n","date":"2018-02-19","img":"","permalink":"/zh-cn/posts/initblog/","series":null,"tags":null,"title":"Hexo+Github Pages 个人博客搭建"},{"categories":null,"content":"markdown使用 我展示的是一级标题 我展示的是二级标题 一级标题 二级标题 三级标题 四级标题 五级标题 六级标题 斜体文本 斜体文本 粗体文本 粗体文本 粗斜体文本 粗斜体文本\n分割线： 带下划线文本，删除线文本 你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线，显示效果如下所示：\n    Markdown 列表 Markdown 支持有序列表和无序列表。无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：\n 第一项 第二项 第三项   第一项 第二项 第三项   第一项 第二项 第三项  有序列表使用数字并加上 . 号来表示，如：\n 第一项 第二项 第三项  Markdown 区块 Markdown 区块引用是在段落开头使用 \u0026gt; 符号 ，然后后面紧跟一个空格符号：\n 区块引用 菜鸟教程 学的不仅是技术更是梦想\n  最外层\n 第一层嵌套\n 第二层嵌套\n   Markdown 代码 如果是段落上的一个函数或片段的代码可以用反引号把它包起来，例如：printf() 函数\n代码块\n1$(document).ready(function () { 2 alert(\u0026#39;RUNOOB\u0026#39;); 3}); 1System.out.println(\u0026#34;hello world\u0026#34;); Markdown 表格 Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。语法格式如下：\n   表头 表头     单元格 单元格   单元格 单元格    对齐方式我们可以设置表格的对齐方式：\n  -: 设置内容和标题栏居右对齐。 :- 设置内容和标题栏居左对齐。 :-: 设置内容和标题栏居中对齐。      表头 表头     单元格 单元格   单元格 单元格       表头 表头     单元格 单元格   单元格 单元格       表头 表头     单元格 单元格   单元格 单元格    Markdown 图片 这是一个链接 菜鸟教程 https://files.catbox.moe/b3gdck.png This is an example inline link. This link has no title attribute. This is an example reference-style link.\n","date":"2018-02-18","img":"","permalink":"/zh-cn/posts/hello-hexo/","series":null,"tags":null,"title":"我的第一个markdown文档"},{"categories":null,"content":"Welcome to Hexo ! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub .\nQuick Start Create a new post 1$ hexo new \u0026#34;My New Post\u0026#34; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment ","date":"0001-01-01","img":"","permalink":"/zh-cn/posts/hello-world/","series":null,"tags":null,"title":"Hello World"}]